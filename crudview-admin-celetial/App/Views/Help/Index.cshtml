
@{
    ViewBag.Title = "Index";
}

@section Header
{

}

<!-- PAGE CONTENT -->
<div class="page-content">
    <div class="container help-text">
        <div name="HTMLCode">
            <section id="htmlcode-section">
                <div class="form-group form-row">
                    <div class="col-4 order-0">
                        <section data-bind="with: getObserverObject()">
                            <div class="well">
                                <section>
                                    <div class="clearfix">
                                        <span data-bind="visible: getProcessing()"><i class="fa fa-cog fa-spin fa-2x"></i></span>
                                        <span data-bind="if: getResultMessage().length > 0" class="alert"><span data-bind="text: getResultMessage()"></span></span>
                                        <div data-bind="if: getErrors().length > 0">
                                            <ul class="errorlist" data-bind="foreach: { data: getObservableErrors(), as: 'error' }">
                                                <li class="alert"><span data-bind="text: errField"></span> <span data-bind="text: errMessage"></span></li>
                                            </ul>
                                        </div>
                                    </div>
                                </section>
                                <section>
                                    <ul class="outer-items-list">
                                        <li class="outer-item-style">
                                            <a data-toggle="collapse" href="#list0">
                                                <span><i class="fa fa-chevron-down"></i></span>
                                                <span class="h5">List Records</span>
                                            </a>
                                            <ul id="list0" class="inner-items-list">
                                                <section data-bind="foreach: {data: getRecords(), as: 'listRecordDetail'}">
                                                    <li class="inner-item-style" data-bind="if: (listRecordDetail !== null && listRecordDetail !== undefined)">
                                                        <span data-bind="if: getRecord() !== undefined">
                                                            <span data-bind="if: getDetail() !== undefined">
                                                                <span data-bind="if: getDetail().getSubListViews().length > 0">
                                                                    <span data-bind="with: getRecord()">
                                                                        <a href="#" data-toggle="collapse" class="green" data-bind="attr: {href: '#' + Uid}, click: function(data, event) { $parents[1].toggleDetail({'index':$index(), 'key': data.Uid, 'source': 'level1-recordid'}); }" title="select"><span data-bind="text: Name(), attr: {title: Description()}"></span></a>
                                                                    </span>
                                                                </span>

                                                                <span data-bind="if: getDetail().getSubListViews().length === 0">
                                                                    <span data-bind="with: getRecord()">
                                                                        <a href="#" data-toggle="collapse" class="green" data-bind="attr: {href: '#' + Uid}"><span data-bind="text: Name(), attr: {title: Description()}"></span></a>
                                                                    </span>
                                                                </span>
                                                            </span>
                                                        </span>
                                                        <span data-bind="if: getDetail() !== undefined">
                                                            <section data-bind="with: getDetail()">
                                                                <section data-bind="with: getObserverObject()">
                                                                    <ul class="inner-items-list" data-bind="attr: {id: $parents[1].getRecord().Name()}">
                                                                        <section data-bind="foreach: { data: getRecords(), as: 'sublistRecordDetail' }">
                                                                            <li class="inner-item-style">
                                                                                <span data-bind="if: getRecord() !== undefined">
                                                                                    <span data-bind="if: getDetail() !== undefined">
                                                                                        <span data-bind="if: getDetail().getSubListViews().length > 0">
                                                                                            <span data-bind="with: getRecord()">
                                                                                                <a href="#" data-toggle="collapse" class="green" data-bind="attr: {href: '#' + Uid}, click: function(data, event) { $parents[1].toggleDetail({'index':$index(), 'key': data.Uid, 'source': 'level1-recordid'}); $root.getObserverInterface().setSharedObject($parents[1]);}" title="select">
                                                                                                    <span data-bind="text: Heading(), attr: {title: SubHeading()}"></span>
                                                                                                </a>
                                                                                            </span>
                                                                                        </span>
                                                                                        <span data-bind="if: getDetail().getSubListViews().length === 0">
                                                                                            <span data-bind="with: getRecord()">
                                                                                                <a href="#" data-toggle="collapse" class="green" data-bind="attr: {href: '#' + Uid}, click: function(data,event) { $parents[1].selectRecord({'record': $parents[0]}); $root.getObserverInterface().setSharedObject($parents[1]); }" title="select">
                                                                                                    <span data-bind="text: Heading(), attr: {title: SubHeading()}"></span>
                                                                                                </a>
                                                                                            </span>
                                                                                        </span>
                                                                                    </span>
                                                                                </span>
                                                                            </li>
                                                                        </section>
                                                                        <section data-bind="if: (getListNavigator() !== null && getListNavigator() !== undefined)">
                                                                            <li class="outer-item-style">
                                                                                <div>
                                                                                    <ul data-bind="if: getListNavigator().calculateTotalPages() > 1" class="searchlist">
                                                                                        <li data-bind="css: {disabled: getCurrentList() === 1}"><a href="#" data-bind="click: function(){ if (getCurrentList() > 1) { list(getCurrentList() - 1); } }"><span>prev</span></a></li>
                                                                                        <li data-bind="css: {disabled: getCurrentList() === getListNavigator().calculateTotalPages()}"><a href="#" data-bind="click: function(){ if ( getCurrentList() < getListNavigator().calculateTotalPages()) { list(getCurrentList() + 1); } }"><span>next</span></a></li>
                                                                                    </ul>
                                                                                </div>
                                                                                <div>
                                                                                    <ul data-bind="if: getListNavigator().calculateTotalPages() > 1" class="searchlist">
                                                                                        <li data-bind="css: {disabled: getCurrentList() === 1}"><a href="#" data-bind="click: function(){ if (getCurrentList() > 1) { list(getCurrentList() - 1,'continue'); } }"><span>shorten</span></a></li>
                                                                                        <li data-bind="css: {disabled: getCurrentList() === getListNavigator().calculateTotalPages()}"><a href="#" data-bind="click: function(){ if ( getCurrentList() < getListNavigator().calculateTotalPages()) { list(getCurrentList() + 1, 'continue'); } }"><span>extend</span></a></li>
                                                                                    </ul>
                                                                                </div>
                                                                            </li>
                                                                        </section>
                                                                    </ul>
                                                                </section>
                                                            </section>
                                                        </span>
                                                    </li>
                                                </section>
                                                <li class="outer-item-style" data-bind="if: (getListNavigator() !== null && getListNavigator() !== undefined)">
                                                    <div>
                                                        <ul data-bind="if: getListNavigator().calculateTotalPages() > 1" class="searchlist">
                                                            <li data-bind="css: {disabled: getCurrentList() === 1}"><a href="#" data-bind="click: function(){ if (getCurrentList() > 1) { list(getCurrentList() - 1); } }"><span>prev</span></a></li>
                                                            <li data-bind="css: {disabled: getCurrentList() === getListNavigator().calculateTotalPages()}"><a href="#" data-bind="click: function(){ if ( getCurrentList() < getListNavigator().calculateTotalPages()) { list(getCurrentList() + 1); } }"><span>next</span></a></li>
                                                        </ul>
                                                    </div>
                                                    <div>
                                                        <ul data-bind="if: getListNavigator().calculateTotalPages() > 1" class="searchlist">
                                                            <li data-bind="css: {disabled: getCurrentList() === 1}"><a href="#" data-bind="click: function(){ if (getCurrentList() > 1) { list(getCurrentList() - 1, 'continue'); } }"><span>shorten</span></a></li>
                                                            <li data-bind="css: {disabled: getCurrentList() === getListNavigator().calculateTotalPages()}"><a href="#" data-bind="click: function(){ if ( getCurrentList() < getListNavigator().calculateTotalPages()) { list(getCurrentList() + 1, 'continue'); } }"><span>extend</span></a></li>
                                                        </ul>
                                                    </div>
                                                </li>
                                            </ul>
                                        </li>
                                    </ul>
                                </section>
                            </div>
                        </section>
                    </div>
                    <div class="col-8 order-1">
                        <section data-bind="with: getObserverObject()">
                            <section data-bind="if: (getRecord() !== null && getRecord() !== undefined)">
                                <section data-bind="with: getRecord()">
                                    <h3>Selected Role</h3>
                                    <p>Following fields display information about selected role from outer list.</p>
                                    <div class="form-group">
                                        <div class="input-group">
                                            <input class="form-control" type="text" data-bind="value: Name()" readonly />
                                            <input class="form-control" type="text" data-bind="value: Description()" readonly />
                                        </div>
                                    </div>
                                </section>
                            </section>
                        </section>
                        <section data-bind="with: getObserverObject()">
                            <section data-bind="with: getSharedObject()">
                                <section data-bind="if: (getRecord() !== null && getRecord() !== undefined)">
                                    <section data-bind="with: getRecord()">
                                        <h3>Selected Action</h3>
                                        <p>Following fields display information about selected action from inner list.</p>
                                        <div class="form-group">
                                            <div class="input-group">
                                                <input class="form-control" type="text" data-bind="value: Heading()" readonly />
                                                <input class="form-control" type="text" data-bind="value: SubHeading()" readonly />
                                            </div>
                                        </div>
                                    </section>
                                </section>
                            </section>
                        </section>
                    </div>
                </div>
            </section>
        </div>

    </div>
</div>
<!-- END PAGE CONTENT -->

@section Scripts {
    <script src="~/js/models/Product.js" type="text/javascript"></script>
    <script src="~/js/models/Advertisement.js" type="text/javascript"></script>

    <script type="text/javascript">
        /**
         * SearchList reference program implementation.
         *
         */
        function programCode() {
            var instance = this;

            instance.view0 = new SearchView({
                'uri': "/product",
                'observer': new SearchObserver({ 'contentType': new Product({}), 'messages': new MessageRepository() })
            });

            instance.view1 = new SearchView({
                'uri': "/advertisement",
                'observer': new SearchObserver({ 'contentType': new Advertisement({}), 'messages': new MessageRepository() })
            });

            instance.list = SearchList({ 'view': instance.view0, 'sublistviews': [instance.view1, instance.view1] });

            instance.getList = function () {
                return instance.list;
            };
        }

        $(function () {
            var program = new programCode();
            ko.applyBindings(program.getList());

            program.getList().list(1);
        });
    </script>
}