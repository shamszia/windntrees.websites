#pragma checksum "D:\projects\softwares\windntrees\WindnTrees.Abstraction.Core.App\Views\Home\Documentation.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ecc2f0294cc555dc551d9596f30b13452fd3db2c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Documentation), @"mvc.1.0.view", @"/Views/Home/Documentation.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\projects\softwares\windntrees\WindnTrees.Abstraction.Core.App\Views\_ViewImports.cshtml"
using Application.Core;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\projects\softwares\windntrees\WindnTrees.Abstraction.Core.App\Views\_ViewImports.cshtml"
using Application.Core.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\projects\softwares\windntrees\WindnTrees.Abstraction.Core.App\Views\_ViewImports.cshtml"
using Application.Core.Models.AccountViewModels;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\projects\softwares\windntrees\WindnTrees.Abstraction.Core.App\Views\_ViewImports.cshtml"
using Application.Core.Models.Configuration;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\projects\softwares\windntrees\WindnTrees.Abstraction.Core.App\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Mvc.Localization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\projects\softwares\windntrees\WindnTrees.Abstraction.Core.App\Views\_ViewImports.cshtml"
using Microsoft.Extensions.Localization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\projects\softwares\windntrees\WindnTrees.Abstraction.Core.App\Views\_ViewImports.cshtml"
using Microsoft.Extensions.Options;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\projects\softwares\windntrees\WindnTrees.Abstraction.Core.App\Views\_ViewImports.cshtml"
using SharedLibrary.Core.Resources.Global;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\projects\softwares\windntrees\WindnTrees.Abstraction.Core.App\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ecc2f0294cc555dc551d9596f30b13452fd3db2c", @"/Views/Home/Documentation.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"615b76ca350cdf68fac19737ed28cc93107e9a68", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Documentation : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            DefineSection("Header", async() => {
                WriteLiteral("\r\n    <title></title>\r\n\r\n");
            }
            );
            WriteLiteral("\r\n");
            DefineSection("PagePath", async() => {
                WriteLiteral(" ");
            }
            );
            WriteLiteral("\r\n");
            DefineSection("ContentHeader", async() => {
                WriteLiteral("\r\n\r\n");
            }
            );
            WriteLiteral(@"
<div class=""form-row p-0 m-0"">
    <div class=""col-lg-3 col-md-3 order-0"" data-bind=""with: getFormObject()"">
        <ul class=""list pl-5 pr-5"">
            <li>
                <a class=""namespace"" href=""#"" data-bind=""click: function(data,event) { $parents[0].SelectClasses('/docs/index.json'); }""><span>All Classes</span></a>
            </li>
        </ul>
        <h6 class=""pl-5 pr-5 d-flex align-content-start"">Namespaces:</h6>
        <ul class=""list pl-5 pr-5"" data-bind=""foreach: Namespaces"">
            <li>
                <a class=""namespace"" href=""#"" data-bind=""click: function(data,event) { $parents[1].SelectClasses('/docs/index.json', data.Namespace); }""><span data-bind=""text: Namespace""></span></a>
            </li>
        </ul>
        <h6 class=""pl-5 pr-5 d-flex align-content-start"">Classes:</h6>
        <ul class=""list pl-5 pr-5"" data-bind=""foreach: Classes"">
            <li>
                <a class=""class"" href=""#"" data-bind=""click: function(data,event) { $parents[1].SelectCl");
            WriteLiteral(@"ass(data.Url); }""><span data-bind=""text: Name, attr: { title: Description }""></span></a>
            </li>
        </ul>
    </div>
    <div class=""col-lg-9 col-md-9 col-sm-12 col-xs-12 order-1"">
        <h2 class=""d-flex justify-content-lg-start""><span data-bind=""text: getFormObject().Title""></span></h2>
        <p data-bind=""text: getFormObject().Description""></p>
        <div data-bind=""with: getReferentialView('constructs-view').getObserverObject()"">
            <div data-bind=""with: getFormObject()"">
                <div class=""form-group form-row"">
                    <div class=""col-12"">
                        <h3 class=""d-flex align-content-start"" data-bind=""text: (Namespace !== null && Namespace !== undefined) ?  Namespace.Name : '', attr: { title: (Namespace !== null && Namespace !== undefined) ? Namespace.Description : '' }""></h3>
                        <h4 class=""d-flex align-content-start"" data-bind=""text: (Class !== null && Class !== undefined) ? Class.Name : '', attr: { title: (Cl");
            WriteLiteral(@"ass !== null && Class !== undefined) ? Class.Description : '' }""></h4>
                        <p class=""d-flex align-content-start"" data-bind=""text: (Class !== null && Class !== undefined) ? Class.Description : ''""></p>
                    </div>
                </div>
                <div class=""form-group form-row"">
                    <div class=""col-12"">
                        <h5 class=""d-flex align-content-start"">Attributes: </h5>
                        <ul class=""list-attributes pl-0"" data-bind=""foreach: Attributes"">
                            <li class=""attribute"">
                                <a href=""#""><span class=""pr-1"" data-bind=""text: Scope""></span><span class=""pr-1"" data-bind=""text: Type""></span><span class=""pr-1"" data-bind=""text: Name""></span></a>
                            </li>
                            <li class=""attribute description"">
                                <span data-bind=""text: Description""></span>
                            </li>
                      ");
            WriteLiteral(@"  </ul>
                        <h5 class=""d-flex align-content-start"">Properties: </h5>
                        <ul class=""list-properties pl-0"" data-bind=""foreach: Properties"">
                            <li class=""property"">
                                <a href=""#""><span class=""pr-1"" data-bind=""text: Scope""></span><span class=""pr-1"" data-bind=""text: Type""></span><span class=""pr-1"" data-bind=""text: Name""></span></a>
                            </li>
                            <li class=""property description"">
                                <span data-bind=""text: Description""></span>
                            </li>
                        </ul>
                        <h5 class=""d-flex align-content-start"">Constructors: </h5>
                        <ul class=""list-constructors pl-0"" data-bind=""foreach: Constructors"">
                            <li class=""constructor"">
                                <a href=""#""><span class=""pr-1"" data-bind=""text: Scope""></span><span class=""pr-1"" data-b");
            WriteLiteral(@"ind=""text: Name""></span>(<span data-bind=""foreach: Arguments""><span class=""pr-1"" data-bind=""text: Type""></span><span data-bind=""text: Name""></span></span>)</a>
                            </li>
                            <li class=""constructor description"">
                                <span data-bind=""text: Description""></span>
                            </li>
                        </ul>
                        <h5 class=""d-flex align-content-start"">Functions: </h5>
                        <ul class=""list-functions pl-0"" data-bind=""foreach: Functions"">
                            <li class=""function"">
                                <a href=""#""><span class=""pr-1"" data-bind=""text: Scope""></span><span class=""pr-1"" data-bind=""text: (Virtual !== null && Virtual !== undefined) ? 'Virtual': '' ""></span><span class=""pr-1"" data-bind=""text: Type""></span><span class=""pr-1"" data-bind=""text: Name""></span>(<span data-bind=""foreach: Arguments""><span class=""pr-1"" data-bind=""text: Type""></span><span data-bin");
            WriteLiteral(@"d=""text: Name""></span></span>)</a>
                            </li>
                            <li class=""function description"">
                                <span data-bind=""text: Description""></span>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script src=""/docs/Index.js""></script>
    <script src=""/docs/Construct.js""></script>

    <script type=""text/javascript"">

        var ClassView = new CRUDView({
            'key': 'constructs-view',
            'observer': new ObjectObserver({ 'contentType': new Construct({}), 'messages': new MessageRepository() })
        });

        var IndexView = new CRUDView({
            'observer': new ObjectObserver({ 'contentType': new Index({}), 'messages': new MessageRepository() }),
            'views': new ObjectObserver({ object: {} })
        });

        IndexView.getObserverObject().SelectClasses = function (url, namespace) {

            try {
                var xhr = new XMLHttpRequest();
                xhr.open(""GET"", url);
                xhr.responseType = ""json"";
                xhr.onload = function () {
                    var jsonResponse = xhr.response;

                    if (namespace !== null && namespace !== undefined) {

                        var namespac");
                WriteLiteral(@"eClasses = [];
                        for (var i = 0; i < jsonResponse[""Classes""].length; i++) {

                            if (jsonResponse[""Classes""][i][""Namespace""] === namespace) {
                                namespaceClasses.push(jsonResponse[""Classes""][i]);
                            }
                        }

                        jsonResponse[""Classes""] = namespaceClasses;
                    }
                    IndexView.getObserverObject().setFormObject(jsonResponse);
                };
                xhr.send();

            } catch (e) {

                console.log(e.message);
            }
        };

        IndexView.getObserverObject().SelectClass = function (url) {

            try {
                var xhr = new XMLHttpRequest();
                xhr.open(""GET"", url);
                xhr.responseType = ""json"";
                xhr.onload = function () {
                    var jsonResponse = xhr.response;

                    ClassView.getObserverOb");
                WriteLiteral(@"ject().setFormObject(jsonResponse);
                };
                xhr.send();

            } catch (e) {

                console.log(e.message);
            }
        };

        IndexView.setReferentialViews(ClassView);

        $(function () {

            try {

                ko.applyBindings(IndexView.getObserverObject());

                IndexView.getObserverObject().SelectClasses(""/docs/index.json"");

            } catch (e) {

                console.log(e.message);
            }
        });

    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
